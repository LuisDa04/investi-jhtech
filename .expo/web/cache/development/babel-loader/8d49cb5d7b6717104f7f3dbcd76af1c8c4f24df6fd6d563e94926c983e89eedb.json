{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\invit\\\\Downloads\\\\investi-app\\\\src\\\\contexts\\\\AuthContext.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as SecureStore from 'expo-secure-store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const navigation = useNavigation();\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n  const checkAuthState = async () => {\n    try {\n      const token = await SecureStore.getItemAsync('access_token');\n      setIsAuthenticated(!!token);\n    } catch (error) {\n      console.error('Error checking auth state:', error);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const signIn = async (token, refreshToken, userData) => {\n    try {\n      await SecureStore.setItemAsync('access_token', token);\n      if (refreshToken) {\n        await SecureStore.setItemAsync('refresh_token', refreshToken);\n      }\n      setUser(userData);\n      setIsAuthenticated(true);\n      navigation.navigate('HomeFeed');\n    } catch (error) {\n      console.error('Error signing in:', error);\n      throw error;\n    }\n  };\n  const updateUser = userData => {\n    if (user) {\n      setUser(Object.assign({}, user, userData));\n    }\n  };\n  const signOut = async () => {\n    try {\n      await SecureStore.deleteItemAsync('access_token');\n      await SecureStore.deleteItemAsync('refresh_token');\n      setUser(null);\n      setIsAuthenticated(false);\n      navigation.navigate('Welcome');\n    } catch (error) {\n      console.error('Error signing out:', error);\n      throw error;\n    }\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      isLoading,\n      user,\n      signIn,\n      signOut,\n      updateUser\n    },\n    children: !isLoading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","SecureStore","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","user","setUser","navigation","useNavigation","checkAuthState","token","getItemAsync","error","console","signIn","refreshToken","userData","setItemAsync","navigate","updateUser","Object","assign","signOut","deleteItemAsync","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","useAuth","context","Error"],"sources":["C:/Users/invit/Downloads/investi-app/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as SecureStore from 'expo-secure-store';\n\nexport type User = {\n  id: string;\n  email: string;\n  name?: string;\n  username?: string;\n  photo_url?: string;\n  created_at?: string;\n  updated_at?: string;\n  // Add other user properties as needed\n};\n\ntype AuthContextData = {\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  user: User | null;\n  signIn: (token: string, refreshToken: string, user: User) => Promise<void>;\n  signOut: () => Promise<void>;\n  updateUser: (user: Partial<User>) => void;\n};\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n\n  const checkAuthState = async () => {\n    try {\n      const token = await SecureStore.getItemAsync('access_token');\n      setIsAuthenticated(!!token);\n    } catch (error) {\n      console.error('Error checking auth state:', error);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const signIn = async (token: string, refreshToken: string, userData: User) => {\n    try {\n      await SecureStore.setItemAsync('access_token', token);\n      if (refreshToken) {\n        await SecureStore.setItemAsync('refresh_token', refreshToken);\n      }\n      setUser(userData);\n      setIsAuthenticated(true);\n      // @ts-ignore\n      navigation.navigate('HomeFeed');\n    } catch (error) {\n      console.error('Error signing in:', error);\n      throw error;\n    }\n  };\n\n  const updateUser = (userData: Partial<User>) => {\n    if (user) {\n      setUser({ ...user, ...userData });\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await SecureStore.deleteItemAsync('access_token');\n      await SecureStore.deleteItemAsync('refresh_token');\n      setUser(null);\n      setIsAuthenticated(false);\n      // @ts-ignore\n      navigation.navigate('Welcome');\n    } catch (error) {\n      console.error('Error signing out:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        isLoading,\n        user,\n        signIn,\n        signOut,\n        updateUser,\n      }}>\n      {!isLoading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsBjD,MAAMC,WAAW,GAAGP,aAAa,CAAkB,CAAC,CAAoB,CAAC;AAEzE,OAAO,MAAMQ,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMa,UAAU,GAAGC,aAAa,CAAC,CAAC;EAElCf,SAAS,CAAC,MAAM;IACdgB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMf,WAAW,CAACgB,YAAY,CAAC,cAAc,CAAC;MAC5DT,kBAAkB,CAAC,CAAC,CAACQ,KAAK,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDV,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMU,MAAM,GAAG,MAAAA,CAAOJ,KAAa,EAAEK,YAAoB,EAAEC,QAAc,KAAK;IAC5E,IAAI;MACF,MAAMrB,WAAW,CAACsB,YAAY,CAAC,cAAc,EAAEP,KAAK,CAAC;MACrD,IAAIK,YAAY,EAAE;QAChB,MAAMpB,WAAW,CAACsB,YAAY,CAAC,eAAe,EAAEF,YAAY,CAAC;MAC/D;MACAT,OAAO,CAACU,QAAQ,CAAC;MACjBd,kBAAkB,CAAC,IAAI,CAAC;MAExBK,UAAU,CAACW,QAAQ,CAAC,UAAU,CAAC;IACjC,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMO,UAAU,GAAIH,QAAuB,IAAK;IAC9C,IAAIX,IAAI,EAAE;MACRC,OAAO,CAAAc,MAAA,CAAAC,MAAA,KAAMhB,IAAI,EAAKW,QAAQ,CAAE,CAAC;IACnC;EACF,CAAC;EAED,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAM3B,WAAW,CAAC4B,eAAe,CAAC,cAAc,CAAC;MACjD,MAAM5B,WAAW,CAAC4B,eAAe,CAAC,eAAe,CAAC;MAClDjB,OAAO,CAAC,IAAI,CAAC;MACbJ,kBAAkB,CAAC,KAAK,CAAC;MAEzBK,UAAU,CAACW,QAAQ,CAAC,SAAS,CAAC;IAChC,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,OACEf,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IACnBC,KAAK,EAAE;MACLxB,eAAe;MACfE,SAAS;MACTE,IAAI;MACJS,MAAM;MACNQ,OAAO;MACPH;IACF,CAAE;IAAAnB,QAAA,EACD,CAACG,SAAS,IAAIH;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAE3B,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMC,OAAO,GAAGvC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACiC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}